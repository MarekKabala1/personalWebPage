---
import { getCollection } from 'astro:content';
import RetroLayout from '../../layouts/RetroLayout.astro';
import type { CollectionEntry } from 'astro:content';

type BlogPost = CollectionEntry<'blog'>;

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post: BlogPost) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

interface Props {
	post: BlogPost;
}

const { post } = Astro.props;
const { Content } = await post.render();
const formattedDate = new Date(post.data.pubDate).toLocaleDateString();
---

<RetroLayout title={post.data.title}>
	<article class='blog-post'>
		<header class='post-header'>
			<h1 class='post-title'>{post.data.title}</h1>
			<time datetime={post.data.pubDate.toString()}>üìÖ {formattedDate}</time>
		</header>
		<main class='post-content'>
			<div class='content-wrapper'>
				<Content />
			</div>
		</main>
		<footer class='post-footer'>
			<a href='/blog' class='retro-button'>‚¨ÖÔ∏è Back to Blog</a>
		</footer>
	</article>
</RetroLayout>

<style>
	.blog-post {
		margin: 20px;
		padding: 20px;
		background: var(--theme-primary);
		border: var(--border-width) solid var(--theme-border);
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	.post-header {
		margin-bottom: 2rem;
		padding-bottom: 1rem;
		border-bottom: 1px solid var(--theme-border);
		flex-shrink: 0;
	}

	.post-title {
		font-size: 2em;
		margin: 0 0 0.5rem;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}

	.post-header time {
		color: var(--theme-secondary);
		font-size: 0.9em;
		display: block;
		min-height: 1.2em;
	}

	.post-content {
		line-height: 1.6;
		flex: 1;
		min-height: 0;
	}

	.content-wrapper {
		min-height: 100%;
		width: 100%;
	}

	.post-content :global(h1) {
		font-size: 2em;
		margin: 2rem 0 1rem;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}

	.post-content :global(h2) {
		font-size: 1.5em;
		margin: 1.5rem 0 1rem;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}

	.post-content :global(p) {
		margin-bottom: 1rem;
		min-height: 1.2em;
	}

	.post-content :global(ul),
	.post-content :global(ol) {
		margin: 1rem 0;
		padding-left: 2rem;
		min-height: 1.2em;
	}

	.post-content :global(li) {
		margin: 0.5rem 0;
		min-height: 1.2em;
	}

	.post-content :global(pre) {
		padding: 1rem;
		overflow-x: auto;
		margin: 1rem 0;
		background: var(--theme-background);
		border: 1px solid var(--theme-border);
		min-height: 2rem;
	}

	.post-content :global(code) {
		font-family: var(--font-retro);
		padding: 0.2em 0.4em;
		background: transparent
		min-height: 1.2em;
	}

	.post-footer {
		margin-top: 2rem;
		padding-top: 1rem;
		border-top: 1px solid var(--theme-border);
		text-align: center;
		flex-shrink: 0;
	}

	/* Dark theme optimizations */
	:global(.theme-dark-retro) .blog-post {
		box-shadow: 4px 2px 0 var(--theme-accent);
	}

	:global(.theme-dark-retro) .post-content {
		text-shadow: none;
	}

	:global(.theme-dark-retro) .post-content :global(p) {
		text-shadow: none;
	}

	/* Layout shift prevention */
	:global(.main-content) {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	:global(.content-wrapper) {
		width: 100%;
		min-height: 100%;
	}
</style>
