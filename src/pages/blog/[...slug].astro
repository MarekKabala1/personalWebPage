---
import { getCollection } from 'astro:content';
import RetroLayout from '../../layouts/RetroLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import { AuthLoading } from 'convex/react';

type BlogPost = CollectionEntry<'blog'>;

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post: BlogPost) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

interface Props {
	post: BlogPost;
}

const { post } = Astro.props;
const { Content } = await post.render();
const formattedDate = new Date(post.data.pubDate).toLocaleDateString();
---

<RetroLayout title={post.data.title}>
	<article class='blog-post'>
		<header class='post-header'>
			<div class="post-header-info">
				<p> <span>Author:</span> {post.data.author ? post.data.author : null}</p>
				<time datetime={post.data.pubDate.toString()}><span>Published:</span> üìÖ {formattedDate}</time>
			</div>
			<div class="post-title-wrapper">
				<h1 class='post-title'>{post.data.title}</h1>
				{post.data.banner ? (
					<div class='post-image-wrapper'>
						<Image
							src={post.data.banner}
							class='post-image'
							loading={ 'lazy'}
							alt={post.data.alt || 'Blog post image'}
							width={600}
							height={325}
							style={{ aspectRatio: 'auto' }}
						/>
					</div>
				) : null}
			</div>
		</header>
		<main class='post-content'>
			<div class='content-wrapper'>
				<Content />
			</div>
		</main>
		<footer class='post-footer'>
			<a href='/blog' class='retro-button'>‚¨ÖÔ∏è Back to Blogs</a>
		</footer>
	</article>
</RetroLayout>

<style>
	.blog-post {
		margin: 20px;
		padding: 20px;
		background: var(--theme-primary);
		border: var(--border-width) solid var(--theme-border);
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	.post-header {
		border-bottom: 1px solid var(--theme-border);
		flex-shrink: 0;
	}

	.post-header-info{
		border-bottom: 2px solid var(--theme-secondary);
		margin-bottom: 1rem;

		span{
			font-weight: bold;
		}
		p{
		 color: var(--theme-secondary);
		}
	}
	.post-header time {
		color: var(--theme-secondary);
		font-size: 0.9em;
		display: block;
		min-height: 1.2em;
	}
	.post-title-wrapper{
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		gap: 1rem;
	}

	.post-title {
		font-size: 1.8em;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}
	.post-image-wrapper {
		width: 100%;
		position: relative;
		text-align: center;
	}

	.post-content {
		line-height: 1.6;
		flex: 1;
		min-height: 0;
	}

	.content-wrapper {
		min-height: 100%;
		width: 100%;
	}

	.post-content :global(h1) {
		font-size: 2em;
		margin: 2rem 0 1rem;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}

	.post-content :global(h2) {
		font-size: 1.5em;
		margin: 1.5rem 0 1rem;
		color: var(--theme-secondary);
		min-height: 1.2em;
	}

	.post-content :global(p) {
		margin-bottom: 1rem;
		min-height: 1.2em;
	}

	.post-content :global(ul),
	.post-content :global(ol) {
		margin: 1rem 0;
		padding-left: 2rem;
		min-height: 1.2em;
	}

	.post-content :global(li) {
		margin: 0.5rem 0;
		min-height: 1.2em;
	}

	.post-content :global(pre) {
		padding: 1rem;
		overflow-x: auto;
		margin: 1rem 0;
		background: var(--theme-background);
		border: 1px solid var(--theme-border);
		min-height: 2rem;
	}

	.post-content :global(code) {
		font-family: var(--font-retro);
		padding: 0.2em 0.4em;
		background: transparent
		min-height: 1.2em;
	}

	.post-footer {
		margin-top: 2rem;
		padding-top: 1rem;
		border-top: 1px solid var(--theme-border);
		text-align: center;
		flex-shrink: 0;
	}

	/* Dark theme optimizations */
	:global(.theme-dark-retro) .blog-post {
		box-shadow: 4px 2px 0 var(--theme-accent);
	}

	:global(.theme-dark-retro) .post-content {
		text-shadow: none;
	}

	:global(.theme-dark-retro) .post-content :global(p) {
		text-shadow: none;
	}

	/* Layout shift prevention */
	:global(.main-content) {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	:global(.content-wrapper) {
		width: 100%;
		min-height: 100%;
	}

	@media (max-width: 768px) {
		.post-image{
			width: 100%;
			height: auto;
		}
	}
</style>
